{"version":3,"sources":["webpack:///./src/services/StudentService.js","webpack:///./src/views/Test.vue?805d","webpack:///src/views/Test.vue","webpack:///./src/views/Test.vue?e512","webpack:///./src/views/Test.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./src/services/OfferService.js","webpack:///./src/services/SchoolService.js","webpack:///./src/services/HomeworkService.js","webpack:///./src/services/CourseService.js"],"names":["axios","defaults","headers","common","localStorage","token","url","StudentService","studentBody","post","Authorization","response","data","studentId","delete","studentIds","offerIds","promises","success","i","length","el","push","Promise","all","then","catch","get","enrolledBody","patch","assignments","sum","count","mark","offerId","render","_vm","this","_h","$createElement","_c","_self","waitingResponse","_e","attrs","on","restart","staticClass","_v","createStudents","createTeachers","createCourse","offers","model","value","callback","$$v","selectedOffer","expression","createHomework","homeworks","selectedHomework","answerAssignments","reviewAssignments","staticRenderFns","apollo","dummyCourseNames","homeworkAmount","questionAmount","teachers","Number","isCreated","created","SchoolService","methods","generateHomework","questions","text","answerType","point","answer","Math","floor","random","choices","homework","component","VBtn","VCol","VDivider","VRow","VSelect","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","OfferService","offerBody","students","file","formData","FormData","append","schoolId","schoolBody","email","password","HomeworkService","homeworkBody","homeworkId","assignment","id","assignmentId","CourseService","courseBody","courseId"],"mappings":"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","file":"js/chunk-400c2c9a.218880e8.js","sourcesContent":["import axios from 'axios'\r\naxios.defaults.headers.common['Authorization'] = localStorage.token;\r\n\r\nconst url = '/api'\r\n\r\nclass StudentService {\r\n    static async CreateStudent(studentBody) {\r\n        const response = await axios.post(`${url}/students`, studentBody, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.token\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n\r\n    static async DeleteStudent(studentId) {\r\n        const response = await axios.delete(`${url}/students` + studentId)\r\n        return response.data\r\n    }\r\n\r\n    static async EnrollStudent(studentIds, offerIds) {\r\n        let promises = []\r\n        let success = \"\"\r\n\r\n        for (let i = 0; i < studentIds.length; i++) {\r\n            const el = studentIds[i];\r\n            promises.push(axios.post(`${url}/students/${el}/enroll`, { offerIds: offerIds }))\r\n        }\r\n\r\n        await Promise.all(promises).then(() => success = true).catch(() => success = false)\r\n        return success\r\n    }\r\n\r\n    static async GetEnrolleds(studentId) {\r\n        const response = await axios.get(`${url}/students/${studentId}/enrolleds`)\r\n        return response.data;\r\n    }\r\n\r\n    static async UpdateEnrolled(enrolledBody) {\r\n        const response = await axios.patch(`${url}/enrolleds/`, enrolledBody);\r\n        return response.data;\r\n    }\r\n\r\n    static async GetStudent(studentId) {\r\n        const response = await axios.get(`${url}/students/${studentId}`)\r\n        return response.data;\r\n    }\r\n\r\n    static CalculateAssignmentsAverage(assignments) {\r\n        let sum = 0;\r\n        let count = assignments.length;\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            sum += assignments[i].mark\r\n        }\r\n\r\n        return sum / count\r\n    }\r\n\r\n    static async GetEnrolled(studentId, offerId) {\r\n        const response = await axios.get(`${url}/enrolleds/?studentId=${studentId}&offerId=${offerId}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default StudentService;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.waitingResponse)?_c('div',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"2\"},on:{\"click\":_vm.restart}},[_c('v-btn',{staticClass:\"ma-5\",attrs:{\"color\":\"error\"},on:{\"click\":_vm.restart}},[_vm._v(\"Restart only\")])],1)],1),_c('v-divider'),_c('v-row',[_c('v-btn',{staticClass:\"ma-5\",attrs:{\"color\":\"primary\"},on:{\"click\":_vm.createStudents}},[_vm._v(\"Create Students\")]),_c('v-btn',{staticClass:\"ma-5\",attrs:{\"color\":\"primary\"},on:{\"click\":_vm.createTeachers}},[_vm._v(\"Create Teachers\")]),_c('v-btn',{staticClass:\"ma-5\",attrs:{\"color\":\"primary\"},on:{\"click\":_vm.createCourse}},[_vm._v(\"Create Course\")])],1),_c('v-divider'),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"2\"}},[_c('v-select',{attrs:{\"label\":\"Offers\",\"outlined\":\"\",\"item-text\":\"code\",\"item-value\":\"id\",\"items\":_vm.offers},model:{value:(_vm.selectedOffer),callback:function ($$v) {_vm.selectedOffer=$$v},expression:\"selectedOffer\"}})],1),_c('v-col',{attrs:{\"cols\":\"2\"}},[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.createHomework}},[_vm._v(\"Create Homework\")])],1)],1),_c('v-divider'),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"2\"}},[_c('v-select',{attrs:{\"label\":\"Homeworks\",\"outlined\":\"\",\"item-text\":\"name\",\"item-value\":\"id\",\"items\":_vm.homeworks},model:{value:(_vm.selectedHomework),callback:function ($$v) {_vm.selectedHomework=$$v},expression:\"selectedHomework\"}})],1),_c('v-btn',{staticClass:\"ml-5 mt-5\",attrs:{\"color\":\"primary\"},on:{\"click\":_vm.answerAssignments}},[_vm._v(\"Answer\")]),_c('v-btn',{staticClass:\"ml-5 mt-5\",attrs:{\"color\":\"primary\"},on:{\"click\":_vm.reviewAssignments}},[_vm._v(\"Review\")])],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-if=\"!waitingResponse\">\r\n    <v-row>\r\n      <v-col cols=\"2\" @click=\"restart\">\r\n        <v-btn class=\"ma-5\" @click=\"restart\" color=\"error\">Restart only</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n    <v-divider></v-divider>\r\n    <v-row>\r\n      <v-btn class=\"ma-5\" color=\"primary\" @click=\"createStudents\"\r\n        >Create Students</v-btn\r\n      >\r\n      <v-btn class=\"ma-5\" color=\"primary\" @click=\"createTeachers\"\r\n        >Create Teachers</v-btn\r\n      >\r\n      <v-btn class=\"ma-5\" color=\"primary\" @click=\"createCourse\"\r\n        >Create Course</v-btn\r\n      >\r\n    </v-row>\r\n    <v-divider></v-divider>\r\n    <v-row>\r\n      <v-col cols=\"2\">\r\n        <v-select\r\n          label=\"Offers\"\r\n          outlined\r\n          item-text=\"code\"\r\n          item-value=\"id\"\r\n          v-model=\"selectedOffer\"\r\n          :items=\"offers\"\r\n        >\r\n        </v-select>\r\n      </v-col>\r\n      <v-col cols=\"2\">\r\n        <v-btn @click=\"createHomework\" color=\"primary\">Create Homework</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n    <v-divider></v-divider>\r\n    <v-row>\r\n      <v-col cols=\"2\">\r\n        <v-select\r\n          label=\"Homeworks\"\r\n          outlined\r\n          item-text=\"name\"\r\n          item-value=\"id\"\r\n          v-model=\"selectedHomework\"\r\n          :items=\"homeworks\"\r\n        >\r\n        </v-select>\r\n      </v-col>\r\n      <v-btn class=\"ml-5 mt-5\" color=\"primary\" @click=\"answerAssignments\"\r\n        >Answer</v-btn\r\n      >\r\n      <v-btn class=\"ml-5 mt-5\" color=\"primary\" @click=\"reviewAssignments\"\r\n        >Review</v-btn\r\n      >\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SchoolService from \"../services/SchoolService\";\r\nimport CourseService from \"../services/CourseService\";\r\nimport OfferService from \"../services/OfferService\";\r\nimport HomeworkService from \"../services/HomeworkService\";\r\nimport axios from \"axios\";\r\nimport gql from \"graphql-tag\";\r\nimport StudentService from \"../services/StudentService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      apollo: {\r\n        homeworks: gql`\r\n          query {\r\n            homeworks {\r\n              name\r\n              id\r\n              offerId\r\n            }\r\n          }\r\n        `\r\n      },\r\n      dummyCourseNames: [\r\n        \"Algorithms\",\r\n        \"Data Structures\",\r\n        \"Philosophy\",\r\n        \"Calculus\",\r\n        \"History\",\r\n        \"Physics\",\r\n        \"English\"\r\n      ],\r\n      homeworkAmount: 5,\r\n      questionAmount: 5,\r\n      offers: [],\r\n      teachers: [],\r\n      homeworks: [],\r\n      selectedOffer: Number,\r\n      selectedHomework: Number,\r\n      isCreated: false,\r\n      waitingResponse: false\r\n    };\r\n  },\r\n  created() {\r\n    SchoolService.GetOffers(1).then(offers => {\r\n      this.offers = offers;\r\n    });\r\n    SchoolService.GetTeachers(1).then(teachers => {\r\n      this.teachers = teachers;\r\n    });\r\n    SchoolService.GetHomeworks(1).then(homeworks => {\r\n      this.homeworks = homeworks;\r\n    });\r\n  },\r\n  methods: {\r\n    restart() {\r\n      this.waitingResponse = true;\r\n      SchoolService.Restart()\r\n        .then(() => {\r\n          return SchoolService.CreateSchool({\r\n            name: \"Çukurova Üniversitesi\",\r\n            email: \"ozhanefemeral@gmail.com\",\r\n            password: \"efemeral1\"\r\n          });\r\n        })\r\n        .then(() => {\r\n          return SchoolService.LoginSchool(\r\n            \"ozhanefemeral@gmail.com\",\r\n            \"efemeral1\"\r\n          );\r\n        })\r\n        .then(response => {\r\n          this.$emit(\"logged\", response.token, \"school\");\r\n          this.waitingResponse = false;\r\n        });\r\n    },\r\n\r\n    async createCourse() {\r\n      this.waitingResponse = true;\r\n      let rndIndex = Math.floor(Math.random() * this.dummyCourseNames.length);\r\n      const courseBody = {\r\n        name: this.dummyCourseNames[rndIndex],\r\n        schoolId: 1\r\n      };\r\n\r\n      if (this.teachers.length == undefined) {\r\n        await SchoolService.GetTeachers(1);\r\n      } else {\r\n        this.$router.go();\r\n      }\r\n\r\n      CourseService.CreateCourse(courseBody).then(course => {\r\n        let createdOffer;\r\n        OfferService.CreateOffer({\r\n          courseId: course.id,\r\n          teacherId: this.teachers[0].id,\r\n          semester: \"Summer\",\r\n          code: courseBody.name.slice(0, 3) + course.id\r\n        })\r\n          .then(offer => {\r\n            createdOffer = offer;\r\n            return SchoolService.GetStudents(1);\r\n          })\r\n          .then(students => {\r\n            let enrollPromises = [];\r\n            for (let i = 0; i < students.length; i++) {\r\n              let currentStudent = students[i];\r\n              enrollPromises.push(\r\n                StudentService.EnrollStudent(currentStudent, [createdOffer.id])\r\n              );\r\n              return Promise.all(enrollPromises);\r\n            }\r\n          })\r\n          .then(() => {\r\n            this.waitingResponse = false;\r\n          });\r\n      });\r\n    },\r\n\r\n    async createHomework() {\r\n      const homework = generateHomework(this.selectedOffer);\r\n      this.waitingResponse = true;\r\n\r\n      HomeworkService.GiveHomework(homework)\r\n        .then(homework => {\r\n          this.homeworks.push(homework);\r\n          return HomeworkService.GetAssignments(homework.id);\r\n        })\r\n        .then(() => {\r\n          this.waitingResponse = false;\r\n        });\r\n    },\r\n\r\n    async createStudents() {\r\n      this.waitingResponse = true;\r\n      axios.post(\"/api/test/students\").then(() => {\r\n        this.waitingResponse = false;\r\n      });\r\n    },\r\n\r\n    async createTeachers() {\r\n      this.waitingResponse = true;\r\n      axios.post(\"/api/test/teachers\").then(res => {\r\n        this.teachers = res.data;\r\n        this.waitingResponse = false;\r\n      });\r\n    },\r\n\r\n    async answerAssignments() {\r\n      this.waitingResponse = true;\r\n      HomeworkService.GetHomework(this.selectedHomework)\r\n        .then(homework => {\r\n          return HomeworkService.GetAssignments(homework.id);\r\n        })\r\n        .then(assignments => {\r\n          let assignmentPromises = [];\r\n          for (let i = 0; i < assignments.length; i++) {\r\n            const currentAssignment = assignments[i];\r\n            let answers = [];\r\n            for (let i = 0; i < 5; i++) {\r\n              let rnd = Math.floor(Math.random() * 5);\r\n              answers.push(rnd);\r\n            }\r\n            assignmentPromises.push(\r\n              axios.patch(\"/api/assignments/\" + currentAssignment.id, {\r\n                answers\r\n              })\r\n            );\r\n          }\r\n\r\n          return Promise.all(assignmentPromises);\r\n        })\r\n        .then(() => {\r\n          this.waitingResponse = false;\r\n        });\r\n    },\r\n\r\n    async reviewAssignments() {\r\n      this.waitingResponse = true;\r\n      HomeworkService.GetHomework(this.selectedHomework)\r\n        .then(homework => {\r\n          return HomeworkService.GetAssignments(homework.id);\r\n        })\r\n        .then(assignments => {\r\n          let assignmentPromises = [];\r\n          for (let i = 0; i < assignments.length; i++) {\r\n            const currentAssignment = assignments[i];\r\n\r\n            assignmentPromises.push(\r\n              HomeworkService.ReviewAssignment(currentAssignment)\r\n            );\r\n          }\r\n\r\n          return Promise.all(assignmentPromises);\r\n        })\r\n        .then(() => {\r\n          this.waitingResponse = false;\r\n        });\r\n    }\r\n  }\r\n};\r\n\r\nfunction generateHomework(offerId) {\r\n  let questions = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    questions.push({\r\n      text: \"Example question\",\r\n      answerType: \"multiple\",\r\n      point: 20,\r\n      answer: Math.floor(Math.random() * 4),\r\n      choices: [\"Choice A\", \"Choice B\", \"Choice C\", \"Choice D\"]\r\n    });\r\n  }\r\n\r\n  const homework = {\r\n    questions,\r\n    offerId\r\n  };\r\n\r\n  return homework;\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=0fbbc86b&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\ninstallComponents(component, {VBtn,VCol,VDivider,VRow,VSelect})\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import axios from 'axios'\r\n\r\nconst url = '/api'\r\n\r\nclass OfferService {\r\n    static async CreateOffer(offerBody) {\r\n        const response = await axios.post(url + '/offers', offerBody)\r\n        return response.data\r\n    }\r\n\r\n    static async GetOffer(offerId) {\r\n        const response = await axios.get(url + '/offers/' + offerId)\r\n        return response.data\r\n    }\r\n\r\n    static async GetHomeworks(offerId) {\r\n        const response = await axios.get(url + '/offers/' + offerId + '/homeworks')\r\n        return response.data\r\n    }\r\n\r\n    static async DeleteOffer(offerId) {\r\n        const response = await axios.delete(url + '/offers/' + offerId)\r\n        return response.data\r\n    }\r\n\r\n    static async GetStudents(offerId) {\r\n        const response = await axios.get(url + '/offers/' + offerId + '/students')\r\n        return response.data\r\n    }\r\n\r\n    static async UnenrollStudents(offerId, students) {\r\n        const response = await axios.delete(url + '/offers/' + offerId + '/unenroll', students)\r\n        return response.data\r\n    }\r\n\r\n    static async UploadFile(offerId, file) {\r\n        var formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        const response = await axios.post(url + '/offers/' + offerId + '/upload', formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default OfferService;","import axios from 'axios'\r\naxios.defaults.headers.common['Authorization'] = localStorage.token;\r\nconst url = \"/api\"\r\n\r\nclass SchoolService {\r\n    static async Restart() {\r\n        const response = await axios.post(url + '/test/restart')\r\n        return response.data\r\n    }\r\n\r\n    static async GetStudents(schoolId) {\r\n        const response = await axios.get(url + '/schools/' + schoolId + '/students')\r\n        return response.data\r\n    }\r\n\r\n    static async GetTeachers(schoolId) {\r\n        const response = await axios.get(url + '/schools/' + schoolId + '/teachers')\r\n        return response.data\r\n    }\r\n\r\n    static async GetCourses(schoolId) {\r\n        const response = await axios.get(url + '/schools/' + schoolId + '/courses')\r\n        return response.data\r\n    }\r\n\r\n    static async GetOffers(schoolId) {\r\n        const response = await axios.get(url + '/schools/' + schoolId + '/offers')\r\n        return response.data\r\n    }\r\n\r\n    static async GetHomeworks(schoolId) {\r\n        const response = await axios.get(url + '/schools/' + schoolId + '/homeworks')\r\n        return response.data\r\n    }\r\n\r\n    static async CreateSchool(schoolBody) {\r\n        const response = await axios.post(url + '/schools/', schoolBody)\r\n        return response.data\r\n    }\r\n\r\n    static async DeleteSchool(schoolId) {\r\n        const response = await axios.delete(url + '/schools/' + schoolId)\r\n        return response.data\r\n    }\r\n\r\n    static async LoginSchool(email, password) {\r\n        const response = await axios.post(`${url}/schools/login`, { email, password })\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default SchoolService;","import axios from 'axios'\r\n\r\nconst url = '/api'\r\n\r\nclass HomeworkService {\r\n    static async GiveHomework(homeworkBody) {\r\n        const response = await axios.post(url + '/homeworks/', homeworkBody)\r\n        return response.data\r\n    }\r\n\r\n    static async GetAssignments(homeworkId) {\r\n        const response = await axios.get(url + '/homeworks/' + homeworkId + '/assignments')\r\n        return response.data\r\n    }\r\n\r\n    static async GetHomework(homeworkId) {\r\n        const response = await axios.get(url + '/homeworks/' + homeworkId)\r\n        return response.data\r\n    }\r\n\r\n    static async DeleteHomework(homeworkId) {\r\n        const response = await axios.delete(url + '/homeworks/' + homeworkId)\r\n        return response.data\r\n    }\r\n\r\n    static async ReviewAssignment(assignment) {\r\n        const response = await axios.patch(url + '/assignments/review/' + assignment.id, assignment)\r\n        return response.data\r\n    }\r\n\r\n    static async GetAssignment(assignmentId) {\r\n        const response = await axios.get(url + '/assignments/' + assignmentId)\r\n        return response.data\r\n    }\r\n\r\n    static async GetHomeworkCourse(homeworkId) {\r\n        const response = await axios.get(url + '/homeworks/' + homeworkId + '/course')\r\n        return response.data\r\n    }\r\n}\r\n\r\nexport default HomeworkService;","import axios from 'axios'\r\n\r\nconst url = '/api'\r\n\r\nclass CourseService {\r\n    static async CreateCourse(courseBody) {\r\n        const response = await axios.post(url + '/courses', courseBody)\r\n        return response.data\r\n    }\r\n\r\n    static async GetCourseById(courseId) {\r\n        const response = await axios.get(url + '/courses/' + courseId)\r\n        return response.data\r\n    }\r\n\r\n    static async DeleteCourse(courseId) {\r\n        const response = await axios.delete(url + '/courses/' + courseId)\r\n        return response.data\r\n    }\r\n}\r\n\r\nexport default CourseService;"],"sourceRoot":""}